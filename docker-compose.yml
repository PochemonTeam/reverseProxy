version: "3"

services:
  log-rpc-service:
    build:
      context: ./
      dockerfile: ./LogRPCService/Dockerfile
    container_name: log-rpc-service
    networks:
      - app-network

  card-service:
    build:
      context: ./
      dockerfile: ./CardService/Dockerfile
    container_name: card-service
    networks:
      - app-network
    depends_on:
      - db-card

  user-service:
    build:
      context: ./
      dockerfile: ./UserService/Dockerfile
    container_name: user-service
    networks:
      - app-network
    depends_on:
      - db-user
  
  store-service:
    build:
      context: ./
      dockerfile: ./StoreService/Dockerfile
    container_name: store-service
    networks:
      - app-network
    depends_on:
      - db-store

  auth-service:
    build:
      context: ./
      dockerfile: ./AuthService/Dockerfile
    container_name: auth-service
    networks:
      - app-network
    depends_on:
      - db-auth
    
  frontend-angular:
    build:
      context: ./
      dockerfile: ./PocheCard_Front/Dockerfile
    container_name: frontend-angular
    networks:
      - app-network

  db-card:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    networks:
      - app-network  
    volumes: 
      - db-card:/var/lib/postgresql/data
      - ./CardService/src/main/resources/db-card.sql:/docker-entrypoint-initdb.d/01-init.sql
  
  db-user:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    networks:
      - app-network  
    volumes: 
      - db-user:/var/lib/postgresql/data
      - ./UserService/src/main/resources/db-user.sql:/docker-entrypoint-initdb.d/01-init.sql
  
  db-store:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    networks:
      - app-network     
    volumes: 
      - db-store:/var/lib/postgresql/data
      - ./StoreService/src/main/resources/db-store.sql:/docker-entrypoint-initdb.d/01-init.sql
    
  db-auth:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    networks:
      - app-network     
    volumes: 
      - db-auth:/var/lib/postgresql/data
      - ./AuthService/src/main/resources/db-auth.sql:/docker-entrypoint-initdb.d/01-init.sql

  reverse-proxy:
    image: nginx
    ports:
      - 80:80
    container_name: reverse-proxy
    volumes:
      - ./reverseProxy/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - auth-service
      - user-service
      - card-service
      - store-service
      - frontend-angular  
 
networks:
  app-network:
    name: app-network

volumes:
  db-card:
    driver: local
  db-user:
    driver: local
  db-store:
    driver: local
  db-auth:
    driver: local